name: Java CI using Gradle and Nebula

on:
  push:
    branches:
      - master
      - release/*
  pull_request:
    branches:
      - master
      - release/*
jobs:
  build:

    runs-on: ubuntu-latest
    # The GITHUB_TOKEN secret is set to an access token for the repository each time a job in a workflow begins.
    # You should set the permissions for this access token in the workflow file to grant
    # read access for the contents scope and write access for the packages scope.
    permissions:
      contents: write
      packages: write
      pull-requests: write
      checks: write

    steps:
      - uses: actions/checkout@v4
        with:
          # 0 indicates all history for all branches and tags
          fetch-depth: "0"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: git status
        run: |
          git status
          git remote -v

      - name: Build for PR
        if: github.event_name == 'pull_request'
        run: ./gradlew build -Prelease.stage=final

      - name: Add test report to PR checks
        uses: dorny/test-reporter@v1
        if: (success() || failure()) && github.event_name == 'pull_request'
        with:
          name: Tests report
          path: ${{ github.workspace }}/build/test-results/test/*.xml
          reporter: java-junit

      - name: Add code coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.5
        if: github.event_name == 'pull_request'
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 90
          min-coverage-changed-files: 99

      - name: Build, publish and tag release
        if: github.event_name == 'push'
        run: ./gradlew build shadowJar publish final -Prelease.stage=final
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # upload full test report (e.g. in case stdout / stderr is needed)
      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: Tests report
          path: ${{ github.workspace }}/build/reports/tests
          retention-days: 1

      - name: deploy new release
        if: github.event_name == 'push'
        run: scripts/deploy-latest.sh

      - name: get latest tag
        id: get_latest_tag
        if: github.event_name == 'push'
        run: |
          tag=$(git describe --abbrev=0 --tags)
          echo "latest tag: $tag"
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

      - name: create release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.get_latest_tag.outputs.tag }}
          tag_name: ${{ steps.get_latest_tag.outputs.tag }}
          draft: false
          prerelease: true
          files: |
            build/libs/*jar
